# count_wheel=4
# engine=True
# fuel='oil'

# def ride():
#   print('Врум-врумм')

# name='чайка'

# ООП: 
# суть в структурировании кода
# у классов намного больше возможностей чем у функций. класс, грубо говоря, блок информации, которая делится на 2 части: методы и свойства

class Car: # имена классам всегда даем с большой буквы
    count_wheel=4 # свойство (характеристики данного класса) 
    engine=True
    fuel='oil'
    def ride(self): # метод класса
        print('Врум-врумм ')#*speed(raphic.ride(5))

seagull=Car() #объект класса
print(seagull.count_wheel,seagull.fuel) # обращение к свойствам класса # выводим свойства
seagull.ride()
# параметр  self это ссылка на тот объект для которого был вызван метод 

raphic=Car() # еще один объект для класса
raphic.fuel='молитвы пассажиров' # меняем значение свойства 
print('Рафики в качестве топлива использовали '+raphic.fuel) 
# в питоне всё предсатвлено в виде объектов 
# класс - это "новый тип данных", но с другим типом использования
#raphic.ride(5)

